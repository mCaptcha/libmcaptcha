name: CI (Linux)

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master


jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        version:
          - stable
          - nightly

    name: ${{ matrix.version }} - x86_64-unknown-linux-gnu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: âš¡ Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-x86_64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: check build
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --bins --examples --tests

      - name: run mcaptcha cache redis instance
        run: docker run -d -p 6379:6379 mcaptcha/cache

      - name: tests
        uses: actions-rs/cargo@v1
        timeout-minutes: 40
        with:
          command: test
          args: --all --all-features --no-fail-fast

            #      - name: Generate coverage file
            #        if: matrix.version == 'stable' && (github.ref == 'refs/heads/master' || github.event_name == 'pull_request')
            #        uses: actions-rs/tarpaulin@v0.1
            #        with:
            #          args: '-t 1200'

            #      - name: Upload to Codecov
            #        if: matrix.version == 'stable' && (github.ref == 'refs/heads/master' || github.event_name == 'pull_request')
            #        uses: codecov/codecov-action@v1
            #        with:
            #          file: cobertura.xml
            #        env:
            #          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

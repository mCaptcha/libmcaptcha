var searchIndex = JSON.parse('{\
"browser":{"doc":"","i":[[5,"greet","browser","",null,[[]]],[5,"__wasm_bindgen_generated_greet","","",null,[[]]]],"p":[]},\
"cli":{"doc":"","i":[[5,"main","cli","",null,[[]]]],"p":[]},\
"m_captcha":{"doc":"","i":[[0,"counter","m_captcha","",null,null],[3,"Visitor","m_captcha::counter","Add visitor message",null,null],[3,"Counter","","",null,null],[3,"CounterBuilder","","Builder for <code>Counter</code>.",null,null],[11,"visitor_count","","",0,[[]]],[11,"levels","","",0,[[["levels",4]]]],[11,"duration","","",0,[[]]],[11,"build","","Builds a new <code>Counter</code>.",0,[[],[["counter",3],["result",4],["string",3]]]],[0,"errors","m_captcha","Error datatypes",null,null],[4,"CaptchaError","m_captcha::errors","Errors that can occur when interacting with the blockchain",null,null],[13,"LevelEmpty","","when configuring m_captcha, <code>DefenseBuilder</code> must be passed …",1,null],[13,"DifficultyFactorZero","","Visitor count must be an integer when configuring …",1,null],[13,"SetDifficultyFactor","","Difficulty factor must be set",1,null],[13,"SetVisitorCount","","Visitor count must be set",1,null],[13,"DuplicateVisitorCount","","Visitor count must be Unique",1,null],[13,"DecreaseingDifficultyFactor","","Difficulty factor should increase with level",1,null],[6,"CaptchaResult","","[Result] datatype for m_captcha",null,null],[11,"from","m_captcha::counter","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","m_captcha::errors","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"clone","m_captcha::counter","",0,[[],["counterbuilder",3]]],[11,"clone","m_captcha::errors","",1,[[],["captchaerror",4]]],[11,"default","m_captcha::counter","",0,[[],["counterbuilder",3]]],[11,"default","","",3,[[]]],[11,"eq","m_captcha::errors","",1,[[["captchaerror",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"handle","m_captcha::counter","",3,[[["visitor",3]]]]],"p":[[3,"CounterBuilder"],[4,"CaptchaError"],[3,"Visitor"],[3,"Counter"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);